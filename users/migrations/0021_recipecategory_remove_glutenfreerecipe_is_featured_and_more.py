# Generated by Django 5.2.4 on 2025-07-15 18:17

import django.db.models.deletion
from django.db import migrations, models


def migrate_recipe_categories(apps, schema_editor):
    # Get model classes
    Category = apps.get_model('users', 'Category')
    RecipeCategory = apps.get_model('users', 'RecipeCategory')
    GlutenFreeRecipe = apps.get_model('users', 'GlutenFreeRecipe')
    
    # Get all recipes that have categories
    recipes_with_categories = GlutenFreeRecipe.objects.filter(category__isnull=False)
    
    # Create a mapping from old category to new recipe category
    category_mapping = {}
    
    for recipe in recipes_with_categories:
        if recipe.category_id not in category_mapping:
            # Get the old category
            try:
                old_category = Category.objects.get(id=recipe.category_id)
                # Create or get the corresponding RecipeCategory
                recipe_category, created = RecipeCategory.objects.get_or_create(
                    name=old_category.name
                )
                category_mapping[recipe.category_id] = recipe_category.id
            except Category.DoesNotExist:
                # If the old category doesn't exist, set to None
                category_mapping[recipe.category_id] = None
    
    # Update all recipes with the new category IDs
    for recipe in recipes_with_categories:
        new_category_id = category_mapping.get(recipe.category_id)
        if new_category_id:
            recipe.category_id = new_category_id
            recipe.save()
        else:
            # Set category to None if no mapping found
            recipe.category = None
            recipe.save()


def reverse_migrate_recipe_categories(apps, schema_editor):
    # This is a one-way migration - we can't reliably reverse it
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0020_glutenfreerecipe_category'),
    ]

    operations = [
        migrations.CreateModel(
            name='RecipeCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Kategori AdÄ±')),
            ],
            options={
                'verbose_name': 'Tarif Kategorisi',
                'verbose_name_plural': 'Tarif Kategorileri',
            },
        ),
        migrations.RemoveField(
            model_name='glutenfreerecipe',
            name='is_featured',
        ),
        migrations.RunPython(
            migrate_recipe_categories,
            reverse_migrate_recipe_categories,
        ),
        migrations.AlterField(
            model_name='glutenfreerecipe',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.recipecategory', verbose_name='Kategori'),
        ),
    ]
